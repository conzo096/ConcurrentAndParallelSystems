  Main.cpp
c:\users\40167111\documents\github\concurrentandparallelsystems\courseworkpartone\courseworkpartone\main.cpp(272): warning C4267: 'argument': conversion from 'size_t' to 'unsigned long', possible loss of data
c:\users\40167111\documents\github\concurrentandparallelsystems\courseworkpartone\courseworkpartone\main.cpp(278): warning C4267: 'argument': conversion from 'size_t' to 'unsigned long', possible loss of data
c:\users\40167111\documents\github\concurrentandparallelsystems\courseworkpartone\courseworkpartone\main.cpp(280): warning C4267: 'argument': conversion from 'size_t' to 'unsigned long', possible loss of data
c:\users\40167111\documents\github\concurrentandparallelsystems\courseworkpartone\courseworkpartone\main.cpp(294): warning C4267: 'argument': conversion from 'size_t' to 'unsigned int', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\type_traits(1790): warning C4244: 'argument': conversion from 'unsigned __int64' to 'int', possible loss of data
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\type_traits(1790): note: see reference to function template instantiation 'void std::_Invoker_functor::_Call<void(__cdecl *)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>>(_Callable &&,unsigned __int64 &&,unsigned __int64 &&,std::vector<_Ty,std::allocator<_Ty>> &&,int &&,int &&,std::vector<vec,std::allocator<vec>> &&) noexcept(false)' being compiled
          with
          [
              _Ty=sphere,
              _Callable=void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &)
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(240): note: see reference to function template instantiation 'void std::invoke<void(__cdecl *)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>>(_Callable &&,unsigned __int64 &&,unsigned __int64 &&,std::vector<_Ty,std::allocator<_Ty>> &&,int &&,int &&,std::vector<vec,std::allocator<vec>> &&) noexcept(false)' being compiled
          with
          [
              _Ty=sphere,
              _Callable=void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &)
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(248): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4,5,6>(std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>> &,std::integer_sequence<unsigned __int64,0,1,2,3,4,5,6>)' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>,
              _Ty=sphere
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(247): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4,5,6>(std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>> &,std::integer_sequence<unsigned __int64,0,1,2,3,4,5,6>)' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>,
              _Ty=sphere
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(244): note: while compiling class template member function 'void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept'
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(232): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thr\xthread(259): note: see reference to class template instantiation 'std::_LaunchPad<_Target>' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.11.25503\include\thread(48): note: see reference to function template instantiation 'void std::_Launch<std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<_Ty,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<_Ty,std::allocator<_Ty>>,int,int,std::vector<vec,std::allocator<vec>>>>>>(_Thrd_t *,_Target &&)' being compiled
          with
          [
              _Ty=sphere,
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>,std::default_delete<std::tuple<void (__cdecl *)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &),unsigned __int64,unsigned __int64,std::vector<sphere,std::allocator<sphere>>,int,int,std::vector<vec,std::allocator<vec>>>>>
          ]
  c:\users\40167111\documents\github\concurrentandparallelsystems\courseworkpartone\courseworkpartone\main.cpp(402): note: see reference to function template instantiation 'std::thread::thread<void(__cdecl &)(int,int,std::vector<sphere,std::allocator<_Ty>> &,int,int,std::vector<vec,std::allocator<vec>> &),const size_t&,const size_t&,std::vector<_Ty,std::allocator<_Ty>>&,int&,int&,std::vector<vec,std::allocator<vec>>&,void>(_Fn,const size_t &,const size_t &,std::vector<_Ty,std::allocator<_Ty>> &,int &,int &,std::vector<vec,std::allocator<vec>> &)' being compiled
          with
          [
              _Ty=sphere,
              _Fn=void (__cdecl &)(int,int,std::vector<sphere,std::allocator<sphere>> &,int,int,std::vector<vec,std::allocator<vec>> &)
          ]
  CourseworkPartOne.vcxproj -> C:\Users\40167111\Documents\GitHub\ConcurrentAndParallelSystems\CourseworkPartOne\x64\Debug\CourseworkPartOne.exe
  CourseworkPartOne.vcxproj -> C:\Users\40167111\Documents\GitHub\ConcurrentAndParallelSystems\CourseworkPartOne\x64\Debug\CourseworkPartOne.pdb (Partial PDB)
